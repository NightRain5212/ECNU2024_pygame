《The Starry Veil》技术手册
--记录游戏中的各种技术难题（会作为汇报的一部分，多更新）

1.地图编辑器:十分低级，并且只能应对没有角色移动的情况，实现简单”背景图移动
细节:Screen对象左上角始终为（0，0）右下角始终为（WIDTH,H EIGTH ),所以当按下<->健时，用scroll值记录，每次在横坐标为0-scroll位置开始画图（ 其实就是在x负半轴开始画，Screen原地踏步），在Screen范围之外的不显示，于是就有了背景图的“ 左 右移动”。

2，tile相关:用编号记录，包括角色也会用编号记录。刷新每帧地图时会逐行比对编号然后贴图。地图编辑器中tile具体位置要计算相对位置保存在二维数组中（排除scroll）。关卡中每个tile都会被添加到pygame的Spritegroup中，好像是方便角色移动。

3.菜单。一个菜单页面一个类，因为菜单往往要负责创建类，以及功能实现。主要，游戏中所有类不会被销毁，只创建一次，因此如果run函数中有,ispausing，isrunning等标志，需要在每次调用run函数时刷新，最好不要把这类变量设为self而是直接当做函数的局部变量。处理事件注意顺序。最后菜单相关代码需要简化，重复代码太多，会被打低分的。

4.关卡。设置Sprite组（pg内置的）（障碍物，爆炸物，角色，敌人，boss，NPC，液体等），方便管理。处理事件注意顺序，角色相关一般滞后，画图应该优先。由于每个关卡的基本骨架都相同，为了不不断重复无意义的代码，采用继承的方式，定义关卡基类，再导出每一关的子类。画图统一在主循环里面画，杜绝角色update自行绘图.处理事件遵循流水线原则，主线尽量只有一条输入线。

5.角色：
-加载动画通过连续帧的更新，达到视觉暂留的效果实现动画，要从一张包含每个帧的图片中切分出每个帧的图像，保存起来方便后面调用。通过一个字典存储状态名到动画帧列表的键值对，向左的动画由向右的动画翻转得到，每次开始游戏时先预处理读取状态帧字典，减少了后续游戏运行的性能开销。

-还需要响应键盘来达到移动效果，通过检测键盘按键按下更改角色矩形的移动参数，计算角色矩形的坐标增长量，再应用到矩形的坐标上。

-难点：碰撞检测，因为地形是一块块的tile搭起来的，而且pygame自带的检测碰撞的函数不包括检测方向的函数，因此需要手动实现水平和竖直两个方向的与地形的碰撞检测。我通过暂时不应用偏移量，而是先分别判断作用两个方向的偏移量后的矩形是否与地形碰撞，若碰撞则重新计算偏移量，水平方向直接变化量dx=0，竖直方向计算玩家矩形下部与地形矩形顶部之差，再应用，即可实现碰撞后不穿过障碍物的效果。

6.存档：
涉及到文件操作，通过查阅资料，可以将关卡状态用一个字典储存起来保存到json文件中以供读取。且有六个槽位分别存储，并且还要显示存档日期。于是通过设计一个字典，存储了存档日期，玩家信息（玩家属性），小怪信息，保存到save+num的格式化文件名中以便区分不同槽位，槽位每次显示日期时只要读取对应槽位的日期即可，读取存档时，分别对每一个关卡进行恢复。json文件打开不能为空.

7.小怪如何跟随主角，增加，水平方向定位，和遇障碍起跳逻辑，小怪能有70%概率追上主角